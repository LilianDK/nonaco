install.packages(c("shinylive", "httpuv"))
shinylive::export(appdir = "myapp", destdir = "docs")
# Define server logic required to draw a histogram ----
server <- function(input, output) {
}
library(shiny)
install.packages("shiny")
library(shiny)
library(shiny)
# UI ----
ui <- fluidPage(
# App title ----
titlePanel("Forecasting Sandbox"),
sidebarLayout(
sidebarPanel(
),
# Main panel for displaying outputs ----
mainPanel(width = 9,
# Forecast Plot ----
plotOutput(outputId = "fc_plot",
height = "400px")
)
)
)
# Define server logic required to draw a histogram ----
server <- function(input, output) {
}
# Create Shiny app ----
shinyApp(ui = ui, server = server)
setwd("C:/Users/Lili/Documents/Programming/nonaco")
shinylive::export(appdir = "app", destdir = "docs")
httpuv::runStaticServer("docs")
shinylive::export(appdir = "app", destdir = "docs")
httpuv::runStaticServer("docs")
shinylive::export(appdir = "app", destdir = "docs")
httpuv::runStaticServer("docs")
shinylive::export(appdir = "app", destdir = "docs")
httpuv::runStaticServer("docs")
shinylive::export(appdir = "app", destdir = "docs")
httpuv::runStaticServer("docs")
shinylive::export(appdir = "app", destdir = "docs")
httpuv::runStaticServer("docs")
shinylive::export(appdir = "app", destdir = "docs")
httpuv::runStaticServer("docs")
shinylive::export(appdir = "app", destdir = "docs")
httpuv::runStaticServer("docs")
shinylive::export(appdir = "app", destdir = "docs")
httpuv::runStaticServer("docs")
shinylive::export(appdir = "app", destdir = "docs")
httpuv::runStaticServer("docs")
shinylive::export(appdir = "app", destdir = "docs")
httpuv::runStaticServer("docs")
httpuv::runStaticServer("docs")
shinylive::export(appdir = "app", destdir = "docs")
httpuv::runStaticServer("docs")
shinylive::export(appdir = "app", destdir = "docs")
httpuv::runStaticServer("docs")
shinylive::export(appdir = "app", destdir = "docs")
httpuv::runStaticServer("docs")
shinylive::export(appdir = "app", destdir = "docs")
httpuv::runStaticServer("docs")
shinylive::export(appdir = "app", destdir = "docs")
httpuv::runStaticServer("docs")
shinylive::export(appdir = "app", destdir = "docs")
httpuv::runStaticServer("docs")
shinylive::export(appdir = "app", destdir = "docs")
httpuv::runStaticServer("docs")
shiny::runApp('app')
httpuv::runStaticServer("docs")
httpuv::runStaticServer("docs")
shinylive::export(appdir = "app", destdir = "docs")
httpuv::runStaticServer("docs")
runApp('app')
httpuv::runStaticServer("docs")
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
shinylive::export(appdir = "app", destdir = "docs")
httpuv::runStaticServer("docs")
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
shinylive::export(appdir = "app", destdir = "docs")
shinylive::export(appdir = "app", destdir = "docs")
