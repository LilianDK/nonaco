install.packages(c("shinylive", "httpuv"))
shinylive::export(appdir = "myapp", destdir = "docs")
# Define server logic required to draw a histogram ----
server <- function(input, output) {
}
library(shiny)
install.packages("shiny")
library(shiny)
library(shiny)
# UI ----
ui <- fluidPage(
# App title ----
titlePanel("Forecasting Sandbox"),
sidebarLayout(
sidebarPanel(
),
# Main panel for displaying outputs ----
mainPanel(width = 9,
# Forecast Plot ----
plotOutput(outputId = "fc_plot",
height = "400px")
)
)
)
# Define server logic required to draw a histogram ----
server <- function(input, output) {
}
# Create Shiny app ----
shinyApp(ui = ui, server = server)
shiny::runApp('Programming/nonaco/app')
runApp('Programming/nonaco/app')
runApp('Programming/nonaco/app')
runApp('Programming/nonaco/app')
runApp('Programming/nonaco/app')
runApp('Programming/nonaco/app')
runApp('Programming/nonaco/app')
runApp('Programming/nonaco/app')
runApp('Programming/nonaco/app')
runApp('Programming/nonaco/app')
runApp('Programming/nonaco/app')
runApp('Programming/nonaco/app')
runApp('Programming/nonaco/app')
runApp('Programming/nonaco/app')
runApp('Programming/nonaco/app')
runApp('Programming/nonaco/app')
runApp('Programming/nonaco/app')
runApp('Programming/nonaco/app')
runApp('Programming/nonaco/app')
runApp('Programming/nonaco/app')
runApp('Programming/nonaco/app')
help(superml)
install.packages("remotes")
remotes::install_github("news-r/textanalysis")
textanalysis::init_textanalysis()
textanalysis::init_textanalysis()
pub1 <- c("Chancen auf eine sichere digitale Welt mit KI", "DIGITALE WELT", "29. März 2024", "https://digitaleweltmagazin.de/chancen-auf-eine-sichere-digitale-welt-mit-ki/")
pub2 <- c("Übersicht zur neuen U.S. KI Executive Order", "Trend Report", "6. März 2024", "https://trendreport.de/uebersicht-zur-neuen-executive-order/")
docs <- data.frame()
docs <- t(data.frame(pub1, pub2))
sentence <- "Welt"
docs
docs <- t(as.data.frame(pub1, pub2))
docs <- data.frame(pub1, pub2)
View(docs)
docs <- t(docs)
docs <- data.frame(pub1, pub2)
View(docs)
pub1 <- r("Chancen auf eine sichere digitale Welt mit KI", "DIGITALE WELT", "29. März 2024", "https://digitaleweltmagazin.de/chancen-auf-eine-sichere-digitale-welt-mit-ki/")
pub2 <- r("Übersicht zur neuen U.S. KI Executive Order", "Trend Report", "6. März 2024", "https://trendreport.de/uebersicht-zur-neuen-executive-order/")
docs <- data.frame()
docs <- data.frame(pub1, pub2)
View(docs)
pub1 <- array("Chancen auf eine sichere digitale Welt mit KI", "DIGITALE WELT", "29. März 2024", "https://digitaleweltmagazin.de/chancen-auf-eine-sichere-digitale-welt-mit-ki/")
pub1 <- vector("Chancen auf eine sichere digitale Welt mit KI", "DIGITALE WELT", "29. März 2024", "https://digitaleweltmagazin.de/chancen-auf-eine-sichere-digitale-welt-mit-ki/")
pub1 <- data.frame("Chancen auf eine sichere digitale Welt mit KI", "DIGITALE WELT", "29. März 2024", "https://digitaleweltmagazin.de/chancen-auf-eine-sichere-digitale-welt-mit-ki/")
pub2 <- data.frame("Übersicht zur neuen U.S. KI Executive Order", "Trend Report", "6. März 2024", "https://trendreport.de/uebersicht-zur-neuen-executive-order/")
docs <- rbind(pub1, pub2)
View(pub1)
pub1 <- data.frame("Chancen auf eine sichere digitale Welt mit KI", "DIGITALE WELT", "29. März 2024", "https://digitaleweltmagazin.de/chancen-auf-eine-sichere-digitale-welt-mit-ki/", header=False)
View(pub1)
docs <- data.frame()
docs <- rbind(pub1, pub2)
cool_people = tribble(
~Title, ~Outlet, ~Date, ~Link,
"Chancen auf eine sichere digitale Welt mit KI", "DIGITALE WELT", "29. März 2024", "https://digitaleweltmagazin.de/chancen-auf-eine-sichere-digitale-welt-mit-ki/",
"Übersicht zur neuen U.S. KI Executive Order", "Trend Report", "6. März 2024", "https://trendreport.de/uebersicht-zur-neuen-executive-order/",
)
cool_people = tribble(
~Title, ~Outlet, ~Date, ~Link,
"Chancen auf eine sichere digitale Welt mit KI", "DIGITALE WELT", "29. März 2024", "https://digitaleweltmagazin.de/chancen-auf-eine-sichere-digitale-welt-mit-ki/",
"Übersicht zur neuen U.S. KI Executive Order", "Trend Report", "6. März 2024", "https://trendreport.de/uebersicht-zur-neuen-executive-order/",
)
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
cool_people = tribble(
~Title, ~Outlet, ~Date, ~Link,
"Chancen auf eine sichere digitale Welt mit KI", "DIGITALE WELT", "29. März 2024", "https://digitaleweltmagazin.de/chancen-auf-eine-sichere-digitale-welt-mit-ki/",
"Übersicht zur neuen U.S. KI Executive Order", "Trend Report", "6. März 2024", "https://trendreport.de/uebersicht-zur-neuen-executive-order/",
)
cool_people
test <- bm_25(document=sentence, corpus=cool_people[,1], top_n=2)
#install.packages("superml")
library(superml)
sentence <- "Welt"
test <- bm_25(document=sentence, corpus=cool_people[,1], top_n=2)
test <- bm_25(document=sentence, corpus=cool_people$Title, top_n=2)
x <- as.data.frame(test[1])
test
x <- as.data.frame(test[1])
x
x <- test(out)[1]
x <- test[[1]]
x
x <- test[[2]]
x
sentence <- "Order"
test <- bm_25(document=sentence, corpus=cool_people$Title, top_n=2)
x <- test[[2]]
x
test
x <- data.frame(as.list(test))
x
x <- data.frame(lapply(test, type.convert), stringsAsFactors = False))
x <- data.frame(lapply(test, type.convert), stringsAsFactors = False)
x
x <- names(test)
x
x <- names(test)[[1]]
x
x <- unname(test[[1]]
x <- unname(test)[[1]]
x <- unname(test)[[1]]
x
length(test)
vector <- cbind(names(test)[[1]], unname(test)[[1]])
vector
vector <- data.frame(Title = character, rank = numeric)
vector <- data.frame(Title = character(0), rank = numeric(0))
vector <- data.frame(title = character(0), rank = numeric(0))
vector <- cbind(names(test)[[1]], unname(test)[[1]])
vector <- data.frame(title = character(0), rank = numeric(0))
vector <- rbind(names(test)[[1]], unname(test)[[1]])
View(vector)
vector <- cbind(names(test)[[1]], unname(test)[[1]])
View(vector)
vector <- data.frame(title = character(0), rank = numeric(0))
row <- cbind(names(test)[[1]], unname(test)[[1]])
vector <- rbind(vector, row)
View(vector)
vector <- data.frame(title = character(0), rank = numeric(0))
for (i in 1:length(test)) {
row <- cbind(names(test)[[i]], unname(test)[[i]])
vector <- rbind(vector, row)
}
View(vector)
pub1 <- data.frame("Chancen auf eine sichere digitale Welt mit KI", "DIGITALE WELT", "29. März 2024", "https://digitaleweltmagazin.de/chancen-auf-eine-sichere-digitale-welt-mit-ki/")
pub2 <- data.frame("Übersicht zur neuen U.S. KI Executive Order", "Trend Report", "6. März 2024", "https://trendreport.de/uebersicht-zur-neuen-executive-order/")
docs <- data.frame()
docs <- rbind(pub1, pub2)
pub1 <- c("Chancen auf eine sichere digitale Welt mit KI", "DIGITALE WELT", "29. März 2024", "https://digitaleweltmagazin.de/chancen-auf-eine-sichere-digitale-welt-mit-ki/")
View(pub2)
pub2 <- c("Übersicht zur neuen U.S. KI Executive Order", "Trend Report", "6. März 2024", "https://trendreport.de/uebersicht-zur-neuen-executive-order/")
docs <- data.frame()
docs <- rbind(pub1, pub2)
View(docs)
names(docs) <- c("title", "outlet", "date", "url")
View(docs)
pub1 <- c("Chancen auf eine sichere digitale Welt mit KI", "DIGITALE WELT", "29. März 2024", "https://digitaleweltmagazin.de/chancen-auf-eine-sichere-digitale-welt-mit-ki/")
pub2 <- c("Übersicht zur neuen U.S. KI Executive Order", "Trend Report", "6. März 2024", "https://trendreport.de/uebersicht-zur-neuen-executive-order/")
docs <- data.frame()
docs <- rbind(docs, pub1, pub2)
View(docs)
names(docs) <- c("title", "outlet", "date", "url")
merge(docs, vector)
docs <- data.frame()
docs <- rbind(docs, pub1, pub2)
names(docs) <- c("title", "outlet", "date", "url")
View(docs)
merge(docs, vector)
output <- merge(docs, vector)
View(output)
pub1 <- c("Chancen auf eine sichere digitale Welt mit KI", "DIGITALE WELT", "29. März 2024", "https://digitaleweltmagazin.de/chancen-auf-eine-sichere-digitale-welt-mit-ki/")
pub2 <- c("Übersicht zur neuen U.S. KI Executive Order", "Trend Report", "6. März 2024", "https://trendreport.de/uebersicht-zur-neuen-executive-order/")
docs <- data.frame()
docs <- rbind(docs, pub1, pub2)
names(docs) <- c("title", "outlet", "date", "url")
output <- merge(docs, vector, by = "title")
View(vector)
vector <- data.frame(title = character(0), rank = numeric(0))
for (i in 1:length(test)) {
row <- cbind(names(test)[[i]], unname(test)[[i]])
vector <- rbind(vector, row)
}
View(vector)
names(vector) <- c("title", "rank")
View(vector)
output <- merge(docs, vector, by = "title")
View(output)
output <- output[order(output$rank)]
View(output)
View(output)
# Publications
pub1 <- c("Chancen auf eine sichere digitale Welt mit KI", "DIGITALE WELT", "29. März 2024", "https://digitaleweltmagazin.de/chancen-auf-eine-sichere-digitale-welt-mit-ki/")
pub2 <- c("Übersicht zur neuen U.S. KI Executive Order", "Trend Report", "6. März 2024", "https://trendreport.de/uebersicht-zur-neuen-executive-order/")
docs <- data.frame()
docs <- rbind(docs, pub1, pub2)
names(docs) <- c("title", "outlet", "date", "url")
sentence <- "Order"
test <- bm_25(document=sentence, corpus=cool_people$Title, top_n=2)
vector <- data.frame(title = character(0), rank = numeric(0))
for (i in 1:length(test)) {
row <- cbind(names(test)[[i]], unname(test)[[i]])
vector <- rbind(vector, row)
}
names(vector) <- c("title", "rank")
output <- merge(docs, vector, by = "title")
View(output)
output <- output[order(output$rank)]
output <- merge(docs, vector, by = "title")
output <- output[order(output$rank),]
View(output)
View(output)
output <- output[order(output$rank, decreasing = TRUE),]
View(output)
View(output)
# Publications
pub1 <- c("Chancen auf eine sichere digitale Welt mit KI", "DIGITALE WELT", "29.03.2024", "German", "https://digitaleweltmagazin.de/chancen-auf-eine-sichere-digitale-welt-mit-ki/")
pub2 <- c("Übersicht zur neuen U.S. KI Executive Order", "Trend Report", "6.03.2024", "German", "https://trendreport.de/uebersicht-zur-neuen-executive-order/")
docs <- data.frame()
docs <- rbind(docs, pub1, pub2)
names(docs) <- c("title", "outlet", "date", "langauge", "url")
sentence <- "Order"
test <- bm_25(document=sentence, corpus=cool_people$Title, top_n=2)
vector <- data.frame(title = character(0), rank = numeric(0))
for (i in 1:length(test)) {
row <- cbind(names(test)[[i]], unname(test)[[i]])
vector <- rbind(vector, row)
}
names(vector) <- c("title", "rank")
output <- merge(docs, vector, by = "title")
output <- output[order(output$rank, decreasing = TRUE),]
View(output)
pub1 <- c("Chancen auf eine sichere digitale Welt mit KI", "DIGITALE WELT", "29.03.2024", "German", "https://digitaleweltmagazin.de/chancen-auf-eine-sichere-digitale-welt-mit-ki/")
pub2 <- c("Übersicht zur neuen U.S. KI Executive Order", "Trend Report", "6.03.2024", "German", "https://trendreport.de/uebersicht-zur-neuen-executive-order/")
docs <- data.frame()
docs <- rbind(docs, pub1, pub2)
names(docs) <- c("title", "outlet", "date", "langauge", "url")
View(docs)
test <- bm_25(document=sentence, corpus=cool_people$Title)
vector <- data.frame(title = character(0), rank = numeric(0))
for (i in 1:length(test)) {
row <- cbind(names(test)[[i]], unname(test)[[i]])
vector <- rbind(vector, row)
}
names(vector) <- c("title", "rank")
output <- merge(docs, vector, by = "title")
View(output)
shiny::runApp('Programming/nonaco/app')
runApp('Programming/nonaco/app')
runApp('Programming/nonaco/app')
runApp('Programming/nonaco/app')
runApp('Programming/nonaco/app')
runApp('Programming/nonaco/app')
library(DT)
install.packages("DT")
install.packages("DT")
library(DT)
shiny::runApp('Programming/nonaco/app')
runApp('Programming/nonaco/app')
shiny::runApp('Programming/nonaco/app')
# Publications
pub1 <- c("Chancen auf eine sichere digitale Welt mit KI", "DIGITALE WELT", "29.03.2024", "German", "https://digitaleweltmagazin.de/chancen-auf-eine-sichere-digitale-welt-mit-ki/", "Die voranschreitende Durchdringung von Anwendungen mit Künstlicher Intelligenz (KI) in Produkten und Dienstleistungen tritt in die nächste Phase des digitalen Zeitalters ein. Damit werden KI-Anwendungen immer mehr zur Grundlage für wirtschaftliche Aktivitäten, sogar unabdingbar für den wirtschaftlichen Erfolg. Diese möchte der Gesetzgeber regulieren, um Risiken vorzubeugen. ")
pub2 <- c("Übersicht zur neuen U.S. KI Executive Order", "Trend Report", "6.03.2024", "German", "https://trendreport.de/uebersicht-zur-neuen-executive-order/", "Für die Verarbeitung von Daten nutzen User und Unternehmen tagtäglich U.S.-Clouddienste. Oder amerikanische Rechendienstleistungen, um eigene Daten oder Daten aus den Datenzentren der Kunden an andere Datenzentren zu senden, dort zu verarbeiten, und anschließend wieder fertig verarbeitet entgegenzunehmen. Neben diesen Datendienstleistungen werden U.S.-Clouddienste genutzt, um Rechenleistungen für KI-Modelle zu beziehen. Am 30. Oktober 2023 erließ das Weiße Haus die „Executive Order on the Safe, Secure, and Trustworthy Development and Use of Artificial Intelligence“.  Dies ist ein einschlägiges Gesetz, welches unter anderem den U.S.-Clouddiensten weitere Transparenzpflichten auferlegt, die auch weltweit Unternehmen und Kunden betreffen. Nachfolgend wird eine Übersicht zu dieser Executive Order gegeben und ein kritischer Punkt hervorgehoben.")
pub3 <- c("Levels of Automation with AI", "Medium", "16.04.2024", "English", "https://medium.com/@lilian.do.khac/levels-of-automation-a250b5b1b697", "Take Aways\n
With augmentation we emphasize the real potential of the digital age.
Orientation along levels of automation make requirements for AI applications more crispy.
With a clear understanding of the levels of automation and associated risks, higher automation levels are achievable.")
pub4 <- c("Number crunching: How many GPUs for hosting LLMs?", "Medium", "19.03.2024", "English", "https://medium.com/@lilian.do.khac/number-crunching-how-many-gpus-for-hosting-llms-5c36dc723ed6", "Investment decisions to host LLMs on-premises are build on knowledge regarding realizing LLM services, LLMs themselves and hardware capabilities.
Take Aways
1. On-Prem Hosting Motivation: GDPR, IP, and reduced cloud dependencies drive on-prem LLM hosting.
2. Hardware Sizing Complexity: On-prem LLM hardware requirements are multidimensional.
3. Practical GPU Examples: Meta’s Llama-2–7B and 70B models GPU needs.")
pub5 <- c("Three facts on ChatGPT — which grape to reap?", "Medium", "17.03.2024", "English", "https://medium.com/@lilian.do.khac/three-facts-on-chatgpt-which-grape-to-reap-6c17a97c4ce8", "Fact one: ChatGPT essentially went viral by setting a rates that surpass adoption rates of popular platforms like TikTok or Instagram. Essentially it is becoming the Nutella, Tempo, Uhu, or Pampers and Co in common phrasing as a synonym for a seemingly very useful and smart AI. record on its user adoption
Fact two: There are some more such “AI things” that can be smart and seemingly useful.
Fact three: But there are not that many more.")
docs <- data.frame()
docs <- rbind(docs, pub1, pub2, pub3, pub4, pub5)
names(docs) <- c("title", "outlet", "date", "language", "url", "abstract")
View(docs)
runApp('Programming/nonaco/app')
