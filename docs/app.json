[{"name":"app.R","content":"library(shiny)\r\nlibrary(shinyWidgets)\r\nlibrary(bsplus)\r\nlibrary(shinyBS)\r\nlibrary(superml)\r\nlibrary(DT)\r\n\r\nsource(\"data.R\")\r\n\r\ncss <- \"\r\nmark {\r\n  padding: 0;\r\n  background-color: white;\r\n  color: red;\r\n}\r\n\"\r\n\r\n# UI ----\r\nui <- fluidPage(\r\n  includeCSS(\"www/style/style.css\"),\r\n  titlePanel(\r\n    title =\r\n      tags$link(rel = \"icon\", type = \"image/png\", href = \"https://raw.githubusercontent.com/LilianDK/nonaco/main/images/logo.png\"),\r\n    \"cohano\"\r\n  ),\r\n\r\n  navbarPage(title = \"cohano\",\r\n         footer = includeHTML(\"www/footer.html\"),\r\n         fluid = TRUE,\r\n         collapsible = TRUE,\r\n  \r\n         # ----------------------------------\r\n         # tabe panel 1\r\n         tabPanel(\"Home\",\r\n                  bs_carousel(id = \"the_beatles\", use_indicators = TRUE) %>%\r\n                    bs_append(\r\n                      content = bs_carousel_image(src = (\"https://raw.githubusercontent.com/LilianDK/nonaco/main/images/milan.jpg\")),\r\n                      caption = bs_carousel_caption(\"Suitability for Machine Learning\", \"Current advances in machine learning are affecting many jobs but only a few jobs are fully automatable using machine learning.\")\r\n                      #<a href=\"https://www.aeaweb.org/articles?id=10.1257/pandp.20181019\">Brynjolfsson et al (2018)<\/a>\r\n                    ) %>%\r\n                    bs_append(\r\n                      content = bs_carousel_image(src = (\"https://raw.githubusercontent.com/LilianDK/nonaco/main/images/porto.jpg\")),\r\n                      caption = bs_carousel_caption(\"AI automation-augmentation paradox\", \"Balancing machine automation (complete automation with machines) and human-machine augmentation (human and machine working together) maximizes benefits for businesses and the society.\")\r\n                      #<a href=\"https://journals.aom.org/doi/abs/10.5465/amr.2018.0072\">Raisch and Krakowski (2021)<\/a>\r\n                    ) %>%\r\n                    bs_append(\r\n                      content = bs_carousel_image(src = (\"https://raw.githubusercontent.com/LilianDK/nonaco/main/images/venice.jpg\")),\r\n                      caption = bs_carousel_caption(\"Supporting situation awareness in human-machine collaboration\", \"Applying methods to enhance situation awareness in human-machine collaboration is critical for this relationship to be effective.\")\r\n                      #<a href=\"https://www.sciencedirect.com/science/article/abs/pii/S0747563222003946\">Endsley (2023)<\/a>\r\n                    ), includeHTML(\"www/home.html\")\r\n         ),\r\n         \r\n         # ----------------------------------\r\n         # tabe panel 2\r\n         tabPanel(\"Portfolio (coming soon)\",\r\n         ),\r\n         \r\n         # ----------------------------------\r\n         # tabe panel 2\r\n         tabPanel(\"Publications (coming soon)\",\r\n                  column(3,\r\n                  div(class=\"panel panel-default\",\r\n                      div(class=\"panel-body\",  \r\n                          tags$div(align = \"left\",\r\n                                    div(\r\n                                    textInput(\"search\", label = h4(\"Search\"), value = \"Enter text...\")%>%\r\n                                      shinyInput_label_embed(\r\n                                        shiny_iconlink() %>%\r\n                                          bs_embed_popover(\r\n                                            title = \"Enter some search terms in the input box below to re-rank the publications.\", content = \"\", placement = \"left\"\r\n                                          )\r\n                                      ),\r\n                                    )\r\n                          ),\r\n                      )\r\n                   ),      \r\n                  ),\r\n                  column(9,\r\n                  div(class=\"panel panel-default\",\r\n                      div(class=\"panel-body\",  \r\n                          tags$div( align = \"center\",\r\n                                    div( align = \"left\", \r\n                                         h4(strong(textOutput(\"title_1\"))),\r\n                                         fluidRow(\r\n                                           column(3,\r\n                                                  strong(\"Language: \"), textOutput(\"language_1\", inline = TRUE)),\r\n                                           column(3,\r\n                                                  strong(\"Publication date: \"), textOutput(\"date_1\", inline = TRUE)),\r\n                                           column(3,\r\n                                                  strong(\"Publication outlet: \"), textOutput(\"outlet_1\", inline = TRUE)),\r\n                                           column(3,)\r\n                                         ),\r\n                                         fluidRow(\r\n                                           column(12,\r\n                                                  tags$br(),\r\n                                                  strong(\"Abstract: \"), textOutput(\"abstract_1\"))\r\n                                         ),\r\n                                         fluidRow(\r\n                                           column(12,\r\n                                                  tags$br(),\r\n                                                  strong(\"Link: \"), textOutput(\"url_1\", inline = TRUE))\r\n                                         ),\r\n                                         fluidRow(\r\n                                           column(12,\r\n                                                  \"BM25 score:\", textOutput(\"rank_1\", inline = TRUE))\r\n                                         ),\r\n                                         #DT::DTOutput(\"ranking\")\r\n                                    )\r\n                          ),\r\n                          tags$p(h6(\"\")),\r\n                      )\r\n                  ),\r\n                  div(class=\"panel panel-default\",\r\n                      div(class=\"panel-body\",  \r\n                          tags$div( align = \"center\",\r\n                                    div( align = \"left\", \r\n                                         h4(strong(textOutput(\"title_2\"))),\r\n                                         fluidRow(\r\n                                           column(3,\r\n                                                  strong(\"Language: \"), textOutput(\"language_2\", inline = TRUE)),\r\n                                           column(3,\r\n                                                  strong(\"Publication date: \"), textOutput(\"date_2\", inline = TRUE)),\r\n                                           column(3,\r\n                                                  strong(\"Publication outlet: \"), textOutput(\"outlet_2\", inline = TRUE)),\r\n                                           column(3,)\r\n                                         ),\r\n                                         fluidRow(\r\n                                           column(12,\r\n                                                  tags$br(),\r\n                                                  strong(\"Abstract: \"), textOutput(\"abstract_2\"))\r\n                                         ),\r\n                                         fluidRow(\r\n                                           column(12,\r\n                                                  tags$br(),\r\n                                                  strong(\"Link: \"), textOutput(\"url_2\", inline = TRUE))\r\n                                         ),\r\n                                         fluidRow(\r\n                                           column(12,\r\n                                                  \"BM25 score:\", textOutput(\"rank_2\", inline = TRUE))\r\n                                         )\r\n                                    )\r\n                          ),\r\n                          tags$p(h6(\"\")),\r\n                      )\r\n                  ),\r\n                  div(class=\"panel panel-default\",\r\n                      div(class=\"panel-body\",  \r\n                          tags$div( align = \"center\",\r\n                                    div( align = \"left\", \r\n                                         h4(strong(textOutput(\"title_3\"))),\r\n                                         fluidRow(\r\n                                           column(3,\r\n                                                  strong(\"Language: \"), textOutput(\"language_3\", inline = TRUE)),\r\n                                           column(3,\r\n                                                  strong(\"Publication date: \"), textOutput(\"date_3\", inline = TRUE)),\r\n                                           column(3,\r\n                                                  strong(\"Publication outlet: \"), textOutput(\"outlet_3\", inline = TRUE)),\r\n                                           column(3,)\r\n                                         ),\r\n                                         fluidRow(\r\n                                           column(12,\r\n                                                  tags$br(),\r\n                                                  strong(\"Abstract:\"), textOutput(\"abstract_3\"))\r\n                                         ),\r\n                                         fluidRow(\r\n                                           column(12,\r\n                                                  tags$br(),\r\n                                                  strong(\"Link: \"), textOutput(\"url_3\", inline = TRUE))\r\n                                         ),\r\n                                         fluidRow(\r\n                                           column(12,\r\n                                                  \"BM25 score:\", textOutput(\"rank_3\", inline = TRUE))\r\n                                         )\r\n                                    )\r\n                          ),\r\n                          tags$p(h6(\"\")),\r\n                      )\r\n                  ),\r\n                  div(class=\"panel panel-default\",\r\n                      div(class=\"panel-body\",  \r\n                          tags$div( align = \"center\",\r\n                                    div( align = \"left\", \r\n                                         h4(strong(textOutput(\"title_4\"))),\r\n                                         fluidRow(\r\n                                           column(3,\r\n                                                  strong(\"Language: \"), textOutput(\"language_4\", inline = TRUE)),\r\n                                           column(3,\r\n                                                  strong(\"Publication date: \"), textOutput(\"date_4\", inline = TRUE)),\r\n                                           column(3,\r\n                                                  strong(\"Publication outlet: \"), textOutput(\"outlet_4\", inline = TRUE)),\r\n                                           column(3,)\r\n                                         ),\r\n                                         fluidRow(\r\n                                           column(12,\r\n                                                  tags$br(),\r\n                                                  strong(\"Abstract:\"), textOutput(\"abstract_4\"))\r\n                                         ),\r\n                                         fluidRow(\r\n                                           column(12,\r\n                                                  tags$br(),\r\n                                                  strong(\"Link: \"), textOutput(\"url_4\", inline = TRUE))\r\n                                         ),\r\n                                         fluidRow(\r\n                                           column(12,\r\n                                                  \"BM25 score:\", textOutput(\"rank_4\", inline = TRUE))\r\n                                         )\r\n                                    )\r\n                          ),\r\n                          tags$p(h6(\"\")),\r\n                      )\r\n                  ),\r\n                  bs_accordion(id = \"bootstrap_types\") %>%\r\n                    bs_set_opts(panel_type = \"default\") %>%\r\n                    bs_append(title = \"Another publication ...\",\r\n                              div(class=\"panel panel-default\",\r\n                                  div(class=\"panel-body\",  \r\n                                      tags$div( align = \"center\",\r\n                                                div( align = \"left\", \r\n                                                     h4(strong(textOutput(\"title_5\"))),\r\n                                                     fluidRow(\r\n                                                       column(3,\r\n                                                              strong(\"Language: \"), textOutput(\"language_5\", inline = TRUE)),\r\n                                                       column(3,\r\n                                                              strong(\"Publication date: \"), textOutput(\"date_5\", inline = TRUE)),\r\n                                                       column(3,\r\n                                                              strong(\"Publication outlet: \"), textOutput(\"outlet_5\", inline = TRUE)),\r\n                                                       column(3,)\r\n                                                     ),\r\n                                                     fluidRow(\r\n                                                       column(12,\r\n                                                              tags$br(),\r\n                                                              strong(\"Abstract:\"), textOutput(\"abstract_5\"))\r\n                                                     ),\r\n                                                     fluidRow(\r\n                                                       column(12,\r\n                                                              tags$br(),\r\n                                                              strong(\"Link: \"), textOutput(\"url_5\", inline = TRUE))\r\n                                                     ),\r\n                                                     fluidRow(\r\n                                                       column(12,\r\n                                                              \"BM25 score:\", textOutput(\"rank_5\", inline = TRUE))\r\n                                                     )\r\n                                                )\r\n                                      ),\r\n                                      tags$p(h6(\"\")),\r\n                                  )\r\n                              )\r\n                              ) %>%\r\n                    bs_set_opts(panel_type = \"default\") %>%\r\n                      bs_append(title = \"The rest ...\", \r\n                                div(class=\"panel panel-default\",\r\n                                    div(class=\"panel-body\",  \r\n                                        tags$div( align = \"center\",\r\n                                                  div( align = \"left\", \r\n                                                       h4(strong(textOutput(\"title_6\"))),\r\n                                                       fluidRow(\r\n                                                         column(3,\r\n                                                                strong(\"Language: \"), textOutput(\"language_6\", inline = TRUE)),\r\n                                                         column(3,\r\n                                                                strong(\"Publication date: \"), textOutput(\"date_6\", inline = TRUE)),\r\n                                                         column(3,\r\n                                                                strong(\"Publication outlet: \"), textOutput(\"outlet_6\", inline = TRUE)),\r\n                                                         column(3,)\r\n                                                       ),\r\n                                                       fluidRow(\r\n                                                         column(12,\r\n                                                                tags$br(),\r\n                                                                strong(\"Abstract:\"), textOutput(\"abstract_6\"))\r\n                                                       ),\r\n                                                       fluidRow(\r\n                                                         column(12,\r\n                                                                tags$br(),\r\n                                                                strong(\"Link: \"), textOutput(\"url_6\", inline = TRUE))\r\n                                                       ),\r\n                                                       fluidRow(\r\n                                                         column(12,\r\n                                                                \"BM25 score:\", textOutput(\"rank_6\", inline = TRUE))\r\n                                                       )\r\n                                                  )\r\n                                        ),\r\n                                        tags$p(h6(\"\")),\r\n                                    )\r\n                                )\r\n                                ),\r\n                  \r\n         )\r\n         ),\r\n  )\r\n)\r\n\r\n# SERVER ----\r\nserver <- function(input, output) {\r\n  \r\n  output$ranking <- DT::renderDT({  \r\n    \r\n    sentence <- input$search\r\n    test <- bm_25(document=sentence, corpus=docs[,1], top_n = 1)\r\n    \r\n    vector <- data.frame(title = character(0), rank = numeric(0))\r\n    for (i in 1:length(test)) {\r\n      row <- cbind(names(test)[[i]], unname(test)[[i]])\r\n      vector <- rbind(vector, row)\r\n    }\r\n    names(vector) <- c(\"title\", \"rank\")\r\n    \r\n    output <- merge(docs, vector, by = \"title\")\r\n    output <- output[order(output$rank, decreasing = TRUE),]\r\n  })\r\n\r\n  output$title_1 <- renderText({  \r\n    \r\n    sentence <- input$search\r\n    test <- bm_25(document=sentence, corpus=docs[,1], top_n = 1)\r\n    \r\n    vector <- data.frame(title = character(0), rank = numeric(0))\r\n    for (i in 1:length(test)) {\r\n      row <- cbind(names(test)[[i]], unname(test)[[i]])\r\n      vector <- rbind(vector, row)\r\n    }\r\n    names(vector) <- c(\"title\", \"rank\")\r\n    \r\n    output <- merge(docs, vector, by = \"title\")\r\n    output <- output[order(output$rank, decreasing = TRUE),]\r\n    title <- output[1,1]\r\n  })\r\n  \r\n  output$title_2 <- renderText({  \r\n    \r\n    sentence <- input$search\r\n    test <- bm_25(document=sentence, corpus=docs[,1], top_n = 1)\r\n    \r\n    vector <- data.frame(title = character(0), rank = numeric(0))\r\n    for (i in 1:length(test)) {\r\n      row <- cbind(names(test)[[i]], unname(test)[[i]])\r\n      vector <- rbind(vector, row)\r\n    }\r\n    names(vector) <- c(\"title\", \"rank\")\r\n    \r\n    output <- merge(docs, vector, by = \"title\")\r\n    output <- output[order(output$rank, decreasing = TRUE),]\r\n    title <- output[2,1]\r\n  })\r\n  \r\n  output$title_3 <- renderText({  \r\n    \r\n    sentence <- input$search\r\n    test <- bm_25(document=sentence, corpus=docs[,1], top_n = 1)\r\n    \r\n    vector <- data.frame(title = character(0), rank = numeric(0))\r\n    for (i in 1:length(test)) {\r\n      row <- cbind(names(test)[[i]], unname(test)[[i]])\r\n      vector <- rbind(vector, row)\r\n    }\r\n    names(vector) <- c(\"title\", \"rank\")\r\n    \r\n    output <- merge(docs, vector, by = \"title\")\r\n    output <- output[order(output$rank, decreasing = TRUE),]\r\n    title <- output[3,1]\r\n  })\r\n  \r\n  output$title_4 <- renderText({  \r\n    \r\n    sentence <- input$search\r\n    test <- bm_25(document=sentence, corpus=docs[,1], top_n = 1)\r\n    \r\n    vector <- data.frame(title = character(0), rank = numeric(0))\r\n    for (i in 1:length(test)) {\r\n      row <- cbind(names(test)[[i]], unname(test)[[i]])\r\n      vector <- rbind(vector, row)\r\n    }\r\n    names(vector) <- c(\"title\", \"rank\")\r\n    \r\n    output <- merge(docs, vector, by = \"title\")\r\n    output <- output[order(output$rank, decreasing = TRUE),]\r\n    title <- output[4,1]\r\n  })\r\n  \r\n  output$title_5 <- renderText({  \r\n    \r\n    sentence <- input$search\r\n    test <- bm_25(document=sentence, corpus=docs[,1], top_n = 1)\r\n    \r\n    vector <- data.frame(title = character(0), rank = numeric(0))\r\n    for (i in 1:length(test)) {\r\n      row <- cbind(names(test)[[i]], unname(test)[[i]])\r\n      vector <- rbind(vector, row)\r\n    }\r\n    names(vector) <- c(\"title\", \"rank\")\r\n    \r\n    output <- merge(docs, vector, by = \"title\")\r\n    output <- output[order(output$rank, decreasing = TRUE),]\r\n    title <- output[5,1]\r\n  })\r\n  \r\n  output$title_6 <- renderText({  \r\n    \r\n    sentence <- input$search\r\n    test <- bm_25(document=sentence, corpus=docs[,1], top_n = 1)\r\n    \r\n    vector <- data.frame(title = character(0), rank = numeric(0))\r\n    for (i in 1:length(test)) {\r\n      row <- cbind(names(test)[[i]], unname(test)[[i]])\r\n      vector <- rbind(vector, row)\r\n    }\r\n    names(vector) <- c(\"title\", \"rank\")\r\n    \r\n    output <- merge(docs, vector, by = \"title\")\r\n    output <- output[order(output$rank, decreasing = TRUE),]\r\n    title <- output[6,1]\r\n  })\r\n  \r\n  output$outlet_1 <- renderText({  \r\n    \r\n    sentence <- input$search\r\n    test <- bm_25(document=sentence, corpus=docs[,1], top_n = 1)\r\n    \r\n    vector <- data.frame(title = character(0), rank = numeric(0))\r\n    for (i in 1:length(test)) {\r\n      row <- cbind(names(test)[[i]], unname(test)[[i]])\r\n      vector <- rbind(vector, row)\r\n    }\r\n    names(vector) <- c(\"title\", \"rank\")\r\n    \r\n    output <- merge(docs, vector, by = \"title\")\r\n    output <- output[order(output$rank, decreasing = TRUE),]\r\n    outlet <- output[1,2]\r\n  })\r\n  \r\n  output$outlet_2 <- renderText({  \r\n    \r\n    sentence <- input$search\r\n    test <- bm_25(document=sentence, corpus=docs[,1], top_n = 1)\r\n    \r\n    vector <- data.frame(title = character(0), rank = numeric(0))\r\n    for (i in 1:length(test)) {\r\n      row <- cbind(names(test)[[i]], unname(test)[[i]])\r\n      vector <- rbind(vector, row)\r\n    }\r\n    names(vector) <- c(\"title\", \"rank\")\r\n    \r\n    output <- merge(docs, vector, by = \"title\")\r\n    output <- output[order(output$rank, decreasing = TRUE),]\r\n    outlet <- output[2,2]\r\n  })\r\n  \r\n  output$outlet_3 <- renderText({  \r\n    \r\n    sentence <- input$search\r\n    test <- bm_25(document=sentence, corpus=docs[,1], top_n = 1)\r\n    \r\n    vector <- data.frame(title = character(0), rank = numeric(0))\r\n    for (i in 1:length(test)) {\r\n      row <- cbind(names(test)[[i]], unname(test)[[i]])\r\n      vector <- rbind(vector, row)\r\n    }\r\n    names(vector) <- c(\"title\", \"rank\")\r\n    \r\n    output <- merge(docs, vector, by = \"title\")\r\n    output <- output[order(output$rank, decreasing = TRUE),]\r\n    outlet <- output[3,2]\r\n  })\r\n  \r\n  output$outlet_4 <- renderText({  \r\n    \r\n    sentence <- input$search\r\n    test <- bm_25(document=sentence, corpus=docs[,1], top_n = 1)\r\n    \r\n    vector <- data.frame(title = character(0), rank = numeric(0))\r\n    for (i in 1:length(test)) {\r\n      row <- cbind(names(test)[[i]], unname(test)[[i]])\r\n      vector <- rbind(vector, row)\r\n    }\r\n    names(vector) <- c(\"title\", \"rank\")\r\n    \r\n    output <- merge(docs, vector, by = \"title\")\r\n    output <- output[order(output$rank, decreasing = TRUE),]\r\n    outlet <- output[4,2]\r\n  })\r\n  \r\n  output$outlet_5 <- renderText({  \r\n    \r\n    sentence <- input$search\r\n    test <- bm_25(document=sentence, corpus=docs[,1], top_n = 1)\r\n    \r\n    vector <- data.frame(title = character(0), rank = numeric(0))\r\n    for (i in 1:length(test)) {\r\n      row <- cbind(names(test)[[i]], unname(test)[[i]])\r\n      vector <- rbind(vector, row)\r\n    }\r\n    names(vector) <- c(\"title\", \"rank\")\r\n    \r\n    output <- merge(docs, vector, by = \"title\")\r\n    output <- output[order(output$rank, decreasing = TRUE),]\r\n    outlet <- output[5,2]\r\n  })\r\n  \r\n  output$outlet_6 <- renderText({  \r\n    \r\n    sentence <- input$search\r\n    test <- bm_25(document=sentence, corpus=docs[,1], top_n = 1)\r\n    \r\n    vector <- data.frame(title = character(0), rank = numeric(0))\r\n    for (i in 1:length(test)) {\r\n      row <- cbind(names(test)[[i]], unname(test)[[i]])\r\n      vector <- rbind(vector, row)\r\n    }\r\n    names(vector) <- c(\"title\", \"rank\")\r\n    \r\n    output <- merge(docs, vector, by = \"title\")\r\n    output <- output[order(output$rank, decreasing = TRUE),]\r\n    outlet <- output[6,2]\r\n  })\r\n  \r\n  output$language_1 <- renderText({  \r\n    \r\n    sentence <- input$search\r\n    test <- bm_25(document=sentence, corpus=docs[,1], top_n = 1)\r\n    \r\n    vector <- data.frame(title = character(0), rank = numeric(0))\r\n    for (i in 1:length(test)) {\r\n      row <- cbind(names(test)[[i]], unname(test)[[i]])\r\n      vector <- rbind(vector, row)\r\n    }\r\n    names(vector) <- c(\"title\", \"rank\")\r\n    \r\n    output <- merge(docs, vector, by = \"title\")\r\n    output <- output[order(output$rank, decreasing = TRUE),]\r\n    language <- output[1,4]\r\n  })\r\n  \r\n  output$language_2 <- renderText({  \r\n    \r\n    sentence <- input$search\r\n    test <- bm_25(document=sentence, corpus=docs[,1], top_n = 1)\r\n    \r\n    vector <- data.frame(title = character(0), rank = numeric(0))\r\n    for (i in 1:length(test)) {\r\n      row <- cbind(names(test)[[i]], unname(test)[[i]])\r\n      vector <- rbind(vector, row)\r\n    }\r\n    names(vector) <- c(\"title\", \"rank\")\r\n    \r\n    output <- merge(docs, vector, by = \"title\")\r\n    output <- output[order(output$rank, decreasing = TRUE),]\r\n    language <- output[2,4]\r\n  })\r\n  \r\n  output$language_3 <- renderText({  \r\n    \r\n    sentence <- input$search\r\n    test <- bm_25(document=sentence, corpus=docs[,1], top_n = 1)\r\n    \r\n    vector <- data.frame(title = character(0), rank = numeric(0))\r\n    for (i in 1:length(test)) {\r\n      row <- cbind(names(test)[[i]], unname(test)[[i]])\r\n      vector <- rbind(vector, row)\r\n    }\r\n    names(vector) <- c(\"title\", \"rank\")\r\n    \r\n    output <- merge(docs, vector, by = \"title\")\r\n    output <- output[order(output$rank, decreasing = TRUE),]\r\n    language <- output[3,4]\r\n  })\r\n  \r\n  output$language_4 <- renderText({  \r\n    \r\n    sentence <- input$search\r\n    test <- bm_25(document=sentence, corpus=docs[,1], top_n = 1)\r\n    \r\n    vector <- data.frame(title = character(0), rank = numeric(0))\r\n    for (i in 1:length(test)) {\r\n      row <- cbind(names(test)[[i]], unname(test)[[i]])\r\n      vector <- rbind(vector, row)\r\n    }\r\n    names(vector) <- c(\"title\", \"rank\")\r\n    \r\n    output <- merge(docs, vector, by = \"title\")\r\n    output <- output[order(output$rank, decreasing = TRUE),]\r\n    language <- output[4,4]\r\n  })\r\n  \r\n  output$language_5 <- renderText({  \r\n    \r\n    sentence <- input$search\r\n    test <- bm_25(document=sentence, corpus=docs[,1], top_n = 1)\r\n    \r\n    vector <- data.frame(title = character(0), rank = numeric(0))\r\n    for (i in 1:length(test)) {\r\n      row <- cbind(names(test)[[i]], unname(test)[[i]])\r\n      vector <- rbind(vector, row)\r\n    }\r\n    names(vector) <- c(\"title\", \"rank\")\r\n    \r\n    output <- merge(docs, vector, by = \"title\")\r\n    output <- output[order(output$rank, decreasing = TRUE),]\r\n    language <- output[5,4]\r\n  })\r\n  \r\n  output$language_6 <- renderText({  \r\n    \r\n    sentence <- input$search\r\n    test <- bm_25(document=sentence, corpus=docs[,1], top_n = 1)\r\n    \r\n    vector <- data.frame(title = character(0), rank = numeric(0))\r\n    for (i in 1:length(test)) {\r\n      row <- cbind(names(test)[[i]], unname(test)[[i]])\r\n      vector <- rbind(vector, row)\r\n    }\r\n    names(vector) <- c(\"title\", \"rank\")\r\n    \r\n    output <- merge(docs, vector, by = \"title\")\r\n    output <- output[order(output$rank, decreasing = TRUE),]\r\n    language <- output[6,4]\r\n  })\r\n  \r\n  output$date_1 <- renderText({  \r\n    \r\n    sentence <- input$search\r\n    test <- bm_25(document=sentence, corpus=docs[,1], top_n = 1)\r\n    \r\n    vector <- data.frame(title = character(0), rank = numeric(0))\r\n    for (i in 1:length(test)) {\r\n      row <- cbind(names(test)[[i]], unname(test)[[i]])\r\n      vector <- rbind(vector, row)\r\n    }\r\n    names(vector) <- c(\"title\", \"rank\")\r\n    \r\n    output <- merge(docs, vector, by = \"title\")\r\n    output <- output[order(output$rank, decreasing = TRUE),]\r\n    date <- output[1,3]\r\n  })\r\n  \r\n  output$date_2 <- renderText({  \r\n    \r\n    sentence <- input$search\r\n    test <- bm_25(document=sentence, corpus=docs[,1], top_n = 1)\r\n    \r\n    vector <- data.frame(title = character(0), rank = numeric(0))\r\n    for (i in 1:length(test)) {\r\n      row <- cbind(names(test)[[i]], unname(test)[[i]])\r\n      vector <- rbind(vector, row)\r\n    }\r\n    names(vector) <- c(\"title\", \"rank\")\r\n    \r\n    output <- merge(docs, vector, by = \"title\")\r\n    output <- output[order(output$rank, decreasing = TRUE),]\r\n    date <- output[2,3]\r\n  })\r\n  \r\n  output$date_3 <- renderText({  \r\n    \r\n    sentence <- input$search\r\n    test <- bm_25(document=sentence, corpus=docs[,1], top_n = 1)\r\n    \r\n    vector <- data.frame(title = character(0), rank = numeric(0))\r\n    for (i in 1:length(test)) {\r\n      row <- cbind(names(test)[[i]], unname(test)[[i]])\r\n      vector <- rbind(vector, row)\r\n    }\r\n    names(vector) <- c(\"title\", \"rank\")\r\n    \r\n    output <- merge(docs, vector, by = \"title\")\r\n    output <- output[order(output$rank, decreasing = TRUE),]\r\n    date <- output[3,3]\r\n  })\r\n  \r\n  output$date_4 <- renderText({  \r\n    \r\n    sentence <- input$search\r\n    test <- bm_25(document=sentence, corpus=docs[,1], top_n = 1)\r\n    \r\n    vector <- data.frame(title = character(0), rank = numeric(0))\r\n    for (i in 1:length(test)) {\r\n      row <- cbind(names(test)[[i]], unname(test)[[i]])\r\n      vector <- rbind(vector, row)\r\n    }\r\n    names(vector) <- c(\"title\", \"rank\")\r\n    \r\n    output <- merge(docs, vector, by = \"title\")\r\n    output <- output[order(output$rank, decreasing = TRUE),]\r\n    date <- output[4,3]\r\n  })\r\n  \r\n  output$date_5 <- renderText({  \r\n    \r\n    sentence <- input$search\r\n    test <- bm_25(document=sentence, corpus=docs[,1], top_n = 1)\r\n    \r\n    vector <- data.frame(title = character(0), rank = numeric(0))\r\n    for (i in 1:length(test)) {\r\n      row <- cbind(names(test)[[i]], unname(test)[[i]])\r\n      vector <- rbind(vector, row)\r\n    }\r\n    names(vector) <- c(\"title\", \"rank\")\r\n    \r\n    output <- merge(docs, vector, by = \"title\")\r\n    output <- output[order(output$rank, decreasing = TRUE),]\r\n    date <- output[5,3]\r\n  })\r\n  \r\n  output$date_6 <- renderText({  \r\n    \r\n    sentence <- input$search\r\n    test <- bm_25(document=sentence, corpus=docs[,1], top_n = 1)\r\n    \r\n    vector <- data.frame(title = character(0), rank = numeric(0))\r\n    for (i in 1:length(test)) {\r\n      row <- cbind(names(test)[[i]], unname(test)[[i]])\r\n      vector <- rbind(vector, row)\r\n    }\r\n    names(vector) <- c(\"title\", \"rank\")\r\n    \r\n    output <- merge(docs, vector, by = \"title\")\r\n    output <- output[order(output$rank, decreasing = TRUE),]\r\n    date <- output[6,3]\r\n  })\r\n  \r\n  output$url_1 <- renderText({  \r\n    \r\n    sentence <- input$search\r\n    test <- bm_25(document=sentence, corpus=docs[,1], top_n = 1)\r\n    \r\n    vector <- data.frame(title = character(0), rank = numeric(0))\r\n    for (i in 1:length(test)) {\r\n      row <- cbind(names(test)[[i]], unname(test)[[i]])\r\n      vector <- rbind(vector, row)\r\n    }\r\n    names(vector) <- c(\"title\", \"rank\")\r\n    \r\n    output <- merge(docs, vector, by = \"title\")\r\n    output <- output[order(output$rank, decreasing = TRUE),]\r\n    url <- output[1,5]\r\n  })\r\n  \r\n  output$url_2 <- renderText({  \r\n    \r\n    sentence <- input$search\r\n    test <- bm_25(document=sentence, corpus=docs[,1], top_n = 1)\r\n    \r\n    vector <- data.frame(title = character(0), rank = numeric(0))\r\n    for (i in 1:length(test)) {\r\n      row <- cbind(names(test)[[i]], unname(test)[[i]])\r\n      vector <- rbind(vector, row)\r\n    }\r\n    names(vector) <- c(\"title\", \"rank\")\r\n    \r\n    output <- merge(docs, vector, by = \"title\")\r\n    output <- output[order(output$rank, decreasing = TRUE),]\r\n    url <- output[2,5]\r\n  })\r\n  \r\n  output$url_3 <- renderText({  \r\n    \r\n    sentence <- input$search\r\n    test <- bm_25(document=sentence, corpus=docs[,1], top_n = 1)\r\n    \r\n    vector <- data.frame(title = character(0), rank = numeric(0))\r\n    for (i in 1:length(test)) {\r\n      row <- cbind(names(test)[[i]], unname(test)[[i]])\r\n      vector <- rbind(vector, row)\r\n    }\r\n    names(vector) <- c(\"title\", \"rank\")\r\n    \r\n    output <- merge(docs, vector, by = \"title\")\r\n    output <- output[order(output$rank, decreasing = TRUE),]\r\n    url <- output[3,5]\r\n  })\r\n  \r\n  output$url_4 <- renderText({  \r\n    \r\n    sentence <- input$search\r\n    test <- bm_25(document=sentence, corpus=docs[,1], top_n = 1)\r\n    \r\n    vector <- data.frame(title = character(0), rank = numeric(0))\r\n    for (i in 1:length(test)) {\r\n      row <- cbind(names(test)[[i]], unname(test)[[i]])\r\n      vector <- rbind(vector, row)\r\n    }\r\n    names(vector) <- c(\"title\", \"rank\")\r\n    \r\n    output <- merge(docs, vector, by = \"title\")\r\n    output <- output[order(output$rank, decreasing = TRUE),]\r\n    url <- output[4,5]\r\n  })\r\n  \r\n  output$url_5 <- renderText({  \r\n    \r\n    sentence <- input$search\r\n    test <- bm_25(document=sentence, corpus=docs[,1], top_n = 1)\r\n    \r\n    vector <- data.frame(title = character(0), rank = numeric(0))\r\n    for (i in 1:length(test)) {\r\n      row <- cbind(names(test)[[i]], unname(test)[[i]])\r\n      vector <- rbind(vector, row)\r\n    }\r\n    names(vector) <- c(\"title\", \"rank\")\r\n    \r\n    output <- merge(docs, vector, by = \"title\")\r\n    output <- output[order(output$rank, decreasing = TRUE),]\r\n    url <- output[5,5]\r\n  })\r\n  \r\n  output$url_6 <- renderText({  \r\n    \r\n    sentence <- input$search\r\n    test <- bm_25(document=sentence, corpus=docs[,1], top_n = 1)\r\n    \r\n    vector <- data.frame(title = character(0), rank = numeric(0))\r\n    for (i in 1:length(test)) {\r\n      row <- cbind(names(test)[[i]], unname(test)[[i]])\r\n      vector <- rbind(vector, row)\r\n    }\r\n    names(vector) <- c(\"title\", \"rank\")\r\n    \r\n    output <- merge(docs, vector, by = \"title\")\r\n    output <- output[order(output$rank, decreasing = TRUE),]\r\n    url <- output[6,5]\r\n  })\r\n  \r\n  output$rank_1 <- renderText({  \r\n    \r\n    sentence <- input$search\r\n    test <- bm_25(document=sentence, corpus=docs[,1], top_n = 1)\r\n    \r\n    vector <- data.frame(title = character(0), rank = numeric(0))\r\n    for (i in 1:length(test)) {\r\n      row <- cbind(names(test)[[i]], unname(test)[[i]])\r\n      vector <- rbind(vector, row)\r\n    }\r\n    names(vector) <- c(\"title\", \"rank\")\r\n    \r\n    output <- merge(docs, vector, by = \"title\")\r\n    output <- output[order(output$rank, decreasing = TRUE),]\r\n    rank <- output[1,7]\r\n  })\r\n  \r\n  output$rank_2 <- renderText({  \r\n    \r\n    sentence <- input$search\r\n    test <- bm_25(document=sentence, corpus=docs[,1], top_n = 1)\r\n    \r\n    vector <- data.frame(title = character(0), rank = numeric(0))\r\n    for (i in 1:length(test)) {\r\n      row <- cbind(names(test)[[i]], unname(test)[[i]])\r\n      vector <- rbind(vector, row)\r\n    }\r\n    names(vector) <- c(\"title\", \"rank\")\r\n    \r\n    output <- merge(docs, vector, by = \"title\")\r\n    output <- output[order(output$rank, decreasing = TRUE),]\r\n    rank <- output[2,7]\r\n  })\r\n  \r\n  output$rank_3 <- renderText({  \r\n    \r\n    sentence <- input$search\r\n    test <- bm_25(document=sentence, corpus=docs[,1], top_n = 1)\r\n    \r\n    vector <- data.frame(title = character(0), rank = numeric(0))\r\n    for (i in 1:length(test)) {\r\n      row <- cbind(names(test)[[i]], unname(test)[[i]])\r\n      vector <- rbind(vector, row)\r\n    }\r\n    names(vector) <- c(\"title\", \"rank\")\r\n    \r\n    output <- merge(docs, vector, by = \"title\")\r\n    output <- output[order(output$rank, decreasing = TRUE),]\r\n    rank <- output[3,7]\r\n  })\r\n  \r\n  output$rank_4 <- renderText({  \r\n    \r\n    sentence <- input$search\r\n    test <- bm_25(document=sentence, corpus=docs[,1], top_n = 1)\r\n    \r\n    vector <- data.frame(title = character(0), rank = numeric(0))\r\n    for (i in 1:length(test)) {\r\n      row <- cbind(names(test)[[i]], unname(test)[[i]])\r\n      vector <- rbind(vector, row)\r\n    }\r\n    names(vector) <- c(\"title\", \"rank\")\r\n    \r\n    output <- merge(docs, vector, by = \"title\")\r\n    output <- output[order(output$rank, decreasing = TRUE),]\r\n    rank <- output[4,7]\r\n  })\r\n  \r\n  output$rank_5 <- renderText({  \r\n    \r\n    sentence <- input$search\r\n    test <- bm_25(document=sentence, corpus=docs[,1], top_n = 1)\r\n    \r\n    vector <- data.frame(title = character(0), rank = numeric(0))\r\n    for (i in 1:length(test)) {\r\n      row <- cbind(names(test)[[i]], unname(test)[[i]])\r\n      vector <- rbind(vector, row)\r\n    }\r\n    names(vector) <- c(\"title\", \"rank\")\r\n    \r\n    output <- merge(docs, vector, by = \"title\")\r\n    output <- output[order(output$rank, decreasing = TRUE),]\r\n    rank <- output[5,7]\r\n  })\r\n  \r\n  output$rank_6 <- renderText({  \r\n    \r\n    sentence <- input$search\r\n    test <- bm_25(document=sentence, corpus=docs[,1], top_n = 1)\r\n    \r\n    vector <- data.frame(title = character(0), rank = numeric(0))\r\n    for (i in 1:length(test)) {\r\n      row <- cbind(names(test)[[i]], unname(test)[[i]])\r\n      vector <- rbind(vector, row)\r\n    }\r\n    names(vector) <- c(\"title\", \"rank\")\r\n    \r\n    output <- merge(docs, vector, by = \"title\")\r\n    output <- output[order(output$rank, decreasing = TRUE),]\r\n    rank <- output[6,7]\r\n  })\r\n  \r\n  output$abstract_1 <- renderText({  \r\n    \r\n    sentence <- input$search\r\n    test <- bm_25(document=sentence, corpus=docs[,1], top_n = 1)\r\n    \r\n    vector <- data.frame(title = character(0), rank = numeric(0))\r\n    for (i in 1:length(test)) {\r\n      row <- cbind(names(test)[[i]], unname(test)[[i]])\r\n      vector <- rbind(vector, row)\r\n    }\r\n    names(vector) <- c(\"title\", \"rank\")\r\n    \r\n    output <- merge(docs, vector, by = \"title\")\r\n    output <- output[order(output$rank, decreasing = TRUE),]\r\n    rank <- output[1,6]\r\n  })\r\n  \r\n  output$abstract_2 <- renderText({  \r\n    \r\n    sentence <- input$search\r\n    test <- bm_25(document=sentence, corpus=docs[,1], top_n = 1)\r\n    \r\n    vector <- data.frame(title = character(0), rank = numeric(0))\r\n    for (i in 1:length(test)) {\r\n      row <- cbind(names(test)[[i]], unname(test)[[i]])\r\n      vector <- rbind(vector, row)\r\n    }\r\n    names(vector) <- c(\"title\", \"rank\")\r\n    \r\n    output <- merge(docs, vector, by = \"title\")\r\n    output <- output[order(output$rank, decreasing = TRUE),]\r\n    rank <- output[2,6]\r\n  })\r\n  \r\n  output$abstract_3 <- renderText({  \r\n    \r\n    sentence <- input$search\r\n    test <- bm_25(document=sentence, corpus=docs[,1], top_n = 1)\r\n    \r\n    vector <- data.frame(title = character(0), rank = numeric(0))\r\n    for (i in 1:length(test)) {\r\n      row <- cbind(names(test)[[i]], unname(test)[[i]])\r\n      vector <- rbind(vector, row)\r\n    }\r\n    names(vector) <- c(\"title\", \"rank\")\r\n    \r\n    output <- merge(docs, vector, by = \"title\")\r\n    output <- output[order(output$rank, decreasing = TRUE),]\r\n    rank <- output[3,6]\r\n  })\r\n  \r\n  output$abstract_4 <- renderText({  \r\n    \r\n    sentence <- input$search\r\n    test <- bm_25(document=sentence, corpus=docs[,1], top_n = 1)\r\n    \r\n    vector <- data.frame(title = character(0), rank = numeric(0))\r\n    for (i in 1:length(test)) {\r\n      row <- cbind(names(test)[[i]], unname(test)[[i]])\r\n      vector <- rbind(vector, row)\r\n    }\r\n    names(vector) <- c(\"title\", \"rank\")\r\n    \r\n    output <- merge(docs, vector, by = \"title\")\r\n    output <- output[order(output$rank, decreasing = TRUE),]\r\n    rank <- output[4,6]\r\n  })\r\n  \r\n  output$abstract_5 <- renderText({  \r\n    \r\n    sentence <- input$search\r\n    test <- bm_25(document=sentence, corpus=docs[,1], top_n = 1)\r\n    \r\n    vector <- data.frame(title = character(0), rank = numeric(0))\r\n    for (i in 1:length(test)) {\r\n      row <- cbind(names(test)[[i]], unname(test)[[i]])\r\n      vector <- rbind(vector, row)\r\n    }\r\n    names(vector) <- c(\"title\", \"rank\")\r\n    \r\n    output <- merge(docs, vector, by = \"title\")\r\n    output <- output[order(output$rank, decreasing = TRUE),]\r\n    rank <- output[5,6]\r\n  })\r\n  \r\n  output$abstract_6 <- renderText({  \r\n    \r\n    sentence <- input$search\r\n    test <- bm_25(document=sentence, corpus=docs[,1], top_n = 1)\r\n    \r\n    vector <- data.frame(title = character(0), rank = numeric(0))\r\n    for (i in 1:length(test)) {\r\n      row <- cbind(names(test)[[i]], unname(test)[[i]])\r\n      vector <- rbind(vector, row)\r\n    }\r\n    names(vector) <- c(\"title\", \"rank\")\r\n    \r\n    output <- merge(docs, vector, by = \"title\")\r\n    output <- output[order(output$rank, decreasing = TRUE),]\r\n    rank <- output[6,6]\r\n  })\r\n}\r\n#shinylive::export(appdir = \"app\", destdir = \"docs\")\r\nshinyApp(ui = ui, server = server)\r\n\r\n\r\n\r\n","type":"text"},{"name":"data.R","content":"# Publications\r\n\r\npub1 <- c(\"Chancen auf eine sichere digitale Welt mit KI\", \"DIGITALE WELT\", \"29.03.2024\", \"German\", \"https://digitaleweltmagazin.de/chancen-auf-eine-sichere-digitale-welt-mit-ki/\", \"Die voranschreitende Durchdringung von Anwendungen mit Künstlicher Intelligenz (KI) in Produkten und Dienstleistungen tritt in die nächste Phase des digitalen Zeitalters ein. Damit werden KI-Anwendungen immer mehr zur Grundlage für wirtschaftliche Aktivitäten, sogar unabdingbar für den wirtschaftlichen Erfolg. Diese möchte der Gesetzgeber regulieren, um Risiken vorzubeugen. \")\r\npub2 <- c(\"Übersicht zur neuen U.S. KI Executive Order\", \"Trend Report\", \"6.03.2024\", \"German\", \"https://trendreport.de/uebersicht-zur-neuen-executive-order/\", \"Für die Verarbeitung von Daten nutzen User und Unternehmen tagtäglich U.S.-Clouddienste. Oder amerikanische Rechendienstleistungen, um eigene Daten oder Daten aus den Datenzentren der Kunden an andere Datenzentren zu senden, dort zu verarbeiten, und anschließend wieder fertig verarbeitet entgegenzunehmen. Neben diesen Datendienstleistungen werden U.S.-Clouddienste genutzt, um Rechenleistungen für KI-Modelle zu beziehen. Am 30. Oktober 2023 erließ das Weiße Haus die „Executive Order on the Safe, Secure, and Trustworthy Development and Use of Artificial Intelligence“.  Dies ist ein einschlägiges Gesetz, welches unter anderem den U.S.-Clouddiensten weitere Transparenzpflichten auferlegt, die auch weltweit Unternehmen und Kunden betreffen. Nachfolgend wird eine Übersicht zu dieser Executive Order gegeben und ein kritischer Punkt hervorgehoben.\")\r\npub3 <- c(\"Levels of Automation with AI\", \"Medium\", \"16.04.2024\", \"English\", \"https://medium.com/@lilian.do.khac/levels-of-automation-a250b5b1b697\", \"Take Aways\\n\r\n\r\n    With augmentation we emphasize the real potential of the digital age.\r\n    Orientation along levels of automation make requirements for AI applications more crispy.\r\n    With a clear understanding of the levels of automation and associated risks, higher automation levels are achievable.\")\r\npub4 <- c(\"Number crunching: How many GPUs for hosting LLMs?\", \"Medium\", \"19.03.2024\", \"English\", \"https://medium.com/@lilian.do.khac/number-crunching-how-many-gpus-for-hosting-llms-5c36dc723ed6\", \"Investment decisions to host LLMs on-premises are build on knowledge regarding realizing LLM services, LLMs themselves and hardware capabilities.\r\nTake Aways\r\n\r\n1. On-Prem Hosting Motivation: GDPR, IP, and reduced cloud dependencies drive on-prem LLM hosting.\r\n\r\n2. Hardware Sizing Complexity: On-prem LLM hardware requirements are multidimensional.\r\n\r\n3. Practical GPU Examples: Meta’s Llama-2–7B and 70B models GPU needs.\")\r\npub5 <- c(\"Three facts on ChatGPT — which grape to reap?\", \"Medium\", \"17.03.2024\", \"English\", \"https://medium.com/@lilian.do.khac/three-facts-on-chatgpt-which-grape-to-reap-6c17a97c4ce8\", \"Fact one: ChatGPT essentially went viral by setting a rates that surpass adoption rates of popular platforms like TikTok or Instagram. Essentially it is becoming the Nutella, Tempo, Uhu, or Pampers and Co in common phrasing as a synonym for a seemingly very useful and smart AI. record on its user adoption\r\n\r\nFact two: There are some more such “AI things” that can be smart and seemingly useful.\r\n\r\nFact three: But there are not that many more.\")\r\n\r\npub6 <- c(\"Artificial General Intelligence Unravelled: A Cockpit to Navigate IT-Capabilities, Regulatory Constraints, Business Processes and User Experience.\", \"Marburg University\", \"22.09.2023\", \"English\", \"https://www.uni-marburg.de/de/fb02/professuren/bwl/digiprozess/forschung/202309_whitepaper_artificial-general-intelligence-unravelled-_v1-0_en.pdf\", \"AI and foundation models develop with an unprecedented speed and challenge organisations\r\naround the globe: we witness changing customer expectations, expectations of employees and\r\nnew requirements to IT-capabilities. At the same time digital regulation, particularly for AI, is evolving and expected to be present in the\r\nsecond half this current decade. Therefore, the development of these regulations must be\r\nmonitored closely and applied in far-sight to avoid issues with compliance. The provision of such powerful AI models in business applications demands for a high-performance\r\ncomputing infrastructure and this means a significant investment decision. Decision-makers must\r\nderive from their desired business vision what they can integrate feasibly and how much risk they\r\ncan afford to take. The integration of modern AI capabilities will fundamentally change job designs and is expected to\r\nlead to increases in productivity. The skills of human and machine collaboration as well as enabling\r\nfactors for such are becoming a key competitive advantage.\")\r\n\r\n\r\ndocs <- data.frame()\r\ndocs <- rbind(docs, pub1, pub2, pub3, pub4, pub5, pub6)\r\nnames(docs) <- c(\"title\", \"outlet\", \"date\", \"language\", \"url\", \"abstract\")\r\n","type":"text"},{"name":"www/footer.html","content":"<hr>\r\n  \r\n<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col text-center\">Built with\r\n    <img src=\"https://raw.githubusercontent.com/LilianDK/nonaco/main/images/shiny-solo.png\" alt=\"Shiny\" class=\"center-block img-responsive\" width=\"50\" style=\"margin-bottom: 80px;\" /> \r\n    <\/div>\r\n  <\/div>\r\n\r\n  \r\n<!-- FOOTER -->\r\n<footer>\r\n<p class=\"pull-right\"><a href=\"#\">Back to top<\/a><\/p>\r\n<p><a href=\"#\" data-toggle=\"modal\" data-target=\"#modal-sitenote\">Site notice<\/a><\/p>\r\n<\/footer>\r\n\r\n<!-- Modal - Credits -->\r\n<div class=\"modal fade\" id=\"modal-sitenote\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\r\n<div class=\"modal-dialog\">\r\n<div class=\"modal-content\">\r\n  <div class=\"modal-header\">\r\n  <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">&times;<\/button>\r\n  <h4 class=\"modal-title\" id=\"myModalLabel\">Site notice<\/h4>\r\n  <\/div>\r\n  <div class=\"modal-body\">\r\n    <p><b>Data privacy<\/b><\/p>\r\n    <p>This website is hosted as GitHub Pages website.<\/p>\r\n    <p>When a GitHub Pages site is visited, the visitor's IP address is logged and stored for security purposes, regardless of whether the visitor has signed into GitHub or not. For more information about GitHub's security practices, see <a href=\"https://docs.github.com/en/site-policy/privacy-policies/github-general-privacy-statement\">GitHub Privacy Statement.<\/a><\/p>\r\n    <p>Besides the hosting related data collection of GitHub described before no further data collection takes place.<\/p>\r\n  \r\n  <p><b>Cookie usage<\/b><\/p>\r\n  <p>This website is programmed without cookies.<\/p>\r\n  \r\n  <p><b>Linked services<\/b><\/p>\r\n  <p>This website contains links to other services. If you follow these links, you should become aware of their terms of service.<\/p>\r\n  <p>I link to:<\/p>\r\n    <ul>\r\n      <li><a href=\"https://github.com/\">GitHub<\/a> for documentation and source code repositories<\/li>\r\n      <li>Social media outlets: <a href=\"https://www.linkedin.com/\">LinkedIn<\/a>, <a href=\"https://medium.com/\">Medium<\/a><\/li>\r\n      <li>Outltes of knowledge sources and publications used: <a href=\"https://www.sciencedirect.com/\">ScienceDirect<\/a>, <a href=\"https://www.aeaweb.org/\">American Economic Association<\/a>, <a href=\"https://journals.aom.org/\">Academy of Management<\/a> <\/li>\r\n    <\/ul>\r\n    \r\n  <\/div>\r\n  \r\n  <div class=\"modal-footer\">\r\n  <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\">Close<\/button>\r\n  <\/div>\r\n<\/div><!-- /.modal-content -->\r\n<\/div><!-- /.modal-dialog -->\r\n<\/div><!-- /.modal -->\r\n\r\n<\/div>\r\n","type":"text"},{"name":"www/home.html","content":"<!-- START THE FEATURETTES -->\r\n\r\n<hr class=\"featurette-divider\">\r\n\r\n<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col text-center\">\r\n      <h1 style=\"font-size:32px;\"><b>Lilian Do Khac<\/b><\/h1> \r\n      <br>\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-envelope\" viewBox=\"0 0 16 16\">\r\n      <path d=\"M0 4a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2zm2-1a1 1 0 0 0-1 1v.217l7 4.2 7-4.2V4a1 1 0 0 0-1-1zm13 2.383-4.708 2.825L15 11.105zm-.034 6.876-5.64-3.471L8 9.583l-1.326-.795-5.64 3.47A1 1 0 0 0 2 13h12a1 1 0 0 0 .966-.741M1 11.105l4.708-2.897L1 5.383z\"/>\r\n      <\/svg>\r\n      l.dokhac@proton.me\r\n      <br>\r\n      <br>\r\n      <br>\r\n    <\/div>\r\n  <\/div>  \r\n  \r\n  <div class=\"row\">\r\n    <div class=\"col-sm-4 text-center\"><\/div>\r\n    <div class=\"col-sm-4 text-center\">\r\n      \r\n    <a class=\"icon-link\" href=\"https://medium.com/@lilian.do.khac\">\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"currentColor\" class=\"bi bi-medium\" viewBox=\"0 0 16 16\">\r\n        <path d=\"M9.025 8c0 2.485-2.02 4.5-4.513 4.5A4.506 4.506 0 0 1 0 8c0-2.486 2.02-4.5 4.512-4.5A4.506 4.506 0 0 1 9.025 8m4.95 0c0 2.34-1.01 4.236-2.256 4.236S9.463 10.339 9.463 8c0-2.34 1.01-4.236 2.256-4.236S13.975 5.661 13.975 8M16 8c0 2.096-.355 3.795-.794 3.795-.438 0-.793-1.7-.793-3.795 0-2.096.355-3.795.794-3.795.438 0 .793 1.699.793 3.795\"/><use xlink:href=\"#box-seam\"><\/use>\r\n      <\/svg>\r\n    <\/a>\r\n    \r\n    <a class=\"icon-link\" href=\"https://www.linkedin.com/in/lilian-tai-do-khac-2a2855105/\">\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"currentColor\" class=\"bi bi-linkedin\" viewBox=\"0 0 16 16\">  \r\n      <path d=\"M0 1.146C0 .513.526 0 1.175 0h13.65C15.474 0 16 .513 16 1.146v13.708c0 .633-.526 1.146-1.175 1.146H1.175C.526 16 0 15.487 0 14.854zm4.943 12.248V6.169H2.542v7.225zm-1.2-8.212c.837 0 1.358-.554 1.358-1.248-.015-.709-.52-1.248-1.342-1.248S2.4 3.226 2.4 3.934c0 .694.521 1.248 1.327 1.248zm4.908 8.212V9.359c0-.216.016-.432.08-.586.173-.431.568-.878 1.232-.878.869 0 1.216.662 1.216 1.634v3.865h2.401V9.25c0-2.22-1.184-3.252-2.764-3.252-1.274 0-1.845.7-2.165 1.193v.025h-.016l.016-.025V6.169h-2.4c.03.678 0 7.225 0 7.225z\"/><use xlink:href=\"#box-seam\"><\/use>\r\n      <\/svg>\r\n    <\/a>\r\n    \r\n    <a class=\"icon-link\" href=\"https://github.com/LilianDK\">\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"currentColor\" class=\"bi bi-github\" viewBox=\"0 0 16 16\">\r\n        <path d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27s1.36.09 2 .27c1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.01 8.01 0 0 0 16 8c0-4.42-3.58-8-8-8\"/><use xlink:href=\"#box-seam\"><\/use>\r\n      <\/svg>\r\n    <\/a>\r\n    \r\n    <\/div>\r\n    \r\n    <div class=\"col-sm-4 text-center\"><\/div>\r\n    \r\n  <\/div>\r\n<\/div>\r\n\r\n<!-- /END THE FEATURETTES -->\r\n\r\n","type":"text"},{"name":"www/style/style.css","content":"body {\r\n     background:#eeeeee;\r\n}\r\n\r\n.panel-transparent {\r\n    background: none;\r\n}\r\n\r\n.panel-transparent .panel-heading{\r\n    background: rgba(29,43,71, 0.2)!important;\r\n}\r\n\r\n.panel-transparent .panel-body{\r\n    background: rgba(29,43,71, 0.2)!important;\r\n}","type":"text"}]
